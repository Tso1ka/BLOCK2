(()=>{var e,n,t={887:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>C});var o=t(354),r=t.n(o),i=t(314),a=t.n(i),c=t(417),s=t.n(c),A=new URL(t(787),t.b),l=new URL(t(632),t.b),d=new URL(t(682),t.b),u=a()(r()),f=s()(A),p=s()(l),h=s()(d);u.push([e.id,`*{padding:0px;margin:0px;border:none}*,*::before,*::after{-webkit-box-sizing:border-box;box-sizing:border-box}a,a:link,a:visited{-webkit-text-decoration:none;text-decoration:none}a:hover{-webkit-text-decoration:none;text-decoration:none}aside,nav,footer,header,section,main{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,textarea,button,select{font-family:inherit;font-size:inherit;color:inherit;background-color:rgba(0,0,0,0)}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background-color:rgba(0,0,0,0);background:none;cursor:pointer}input:focus,input:active,button:focus,button:active{outline:none}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}legend{display:block}input[type=file]{max-width:100%}@font-face{font-family:"Jost";src:url(${f}) format("woff2");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Jost";src:url(${p}) format("woff2");font-weight:700;font-style:normal;font-display:swap}@font-face{font-family:"Jost";src:url(${h}) format("woff2");font-weight:600;font-style:normal;font-display:swap}.main{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.header{position:sticky;top:60;background-color:bg-color-secondary;padding:30 410 20 20}.header__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer{display:-webkit-box;display:-ms-flexbox;display:flex;min-height:100vh;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:40 0;background-color:bg-color-secondary;color:text-color-secondary}*{font-family:"Jost",sans-serif}body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:320px;min-height:100dvh;font-family:"Jost",sans-serif;font-weight:400;line-height:1.6;color:#141024;background-color:#fff}section{padding:120px 0}.container{margin:0 auto;padding:0 20px;max-width:1200px;width:100%;height:100%}.container--wide{max-width:1760px}.logo{font-weight:700;font-size:30px;color:#fff}.tel{font-weight:600;font-size:30px;color:#fff}.button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:25px 54px;font-size:18px;font-weight:400;text-align:center;-webkit-text-decoration:none;text-decoration:none;cursor:pointer;border:none;border-radius:5px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#d52027;color:#fff;-webkit-transition:background-color .3s ease, color .3s ease;transition:background-color .3s ease, color .3s ease}.button:hover{background-color:#b9191d}.button--dark{background-color:#141024}.button--dark:hover{background-color:#282148}`,"",{version:3,sources:["webpack://./src/styles/reset.scss","webpack://./src/styles/fonts.scss","webpack://./src/styles/blocks/layout.scss","webpack://./src/styles/global.scss","webpack://./src/styles/variables.scss"],names:[],mappings:"AACA,EACE,WAAA,CACA,UAAA,CACA,WAAA,CAGF,qBAGE,6BAAA,CAAA,qBAAA,CAKF,mBAGE,4BAAA,CAAA,oBAAA,CAGF,QACE,4BAAA,CAAA,oBAAA,CAKF,qCAME,aAAA,CAGF,oBAOE,iBAAA,CACA,mBAAA,CAGF,SAEE,eAAA,CAGF,IACE,kBAAA,CAGF,QAEE,cAAA,CACA,WAAA,CAGF,QACE,iBAAA,CAKF,6BAIE,mBAAA,CACA,iBAAA,CACA,aAAA,CACA,8BAAA,CAGF,iBACE,YAAA,CAGF,0BAEE,oBAAA,CACA,uBAAA,CAAA,eAAA,CACA,8BAAA,CACA,eAAA,CACA,cAAA,CAGF,oDAIE,YAAA,CAGF,yBACE,SAAA,CACA,QAAA,CAGF,MACE,cAAA,CAGF,OACE,aAAA,CAGF,iBACE,cAAA,CC/GA,WACE,kBAQe,CAPf,2DAAA,CACA,eAM4D,CAL5D,iBALoD,CAMpD,iBAAA,CALF,WACE,kBASe,CARf,2DAAA,CACA,eAOyD,CANzD,iBALoD,CAMpD,iBAAA,CALF,WACE,kBAUe,CATf,2DAAA,CACA,eAQ6D,CAP7D,iBALoD,CAMpD,iBAAA,CCNJ,MACE,kBAAA,CAAA,mBAAA,CAAA,WAAA,CAGF,QACE,eAAA,CACA,MAAA,CACA,mCAAA,CACA,oBAAA,CAGF,iBACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CAGF,QACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,gBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BAAA,CACA,YAAA,CACA,mCAAA,CACA,0BAAA,CCrBF,EACE,6BCHU,CDMZ,KACE,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,qBAAA,CACA,eAAA,CACA,iBAAA,CACA,6BCXU,CDYV,eAAA,CACA,eAAA,CACA,aCXc,CDYd,qBCVgB,CDalB,QACE,eAAA,CAGF,WACE,aAAA,CACA,cAAA,CACA,gBAAA,CACA,UAAA,CACA,WAAA,CAEA,iBACE,gBAAA,CAIJ,MACE,eAAA,CACA,cAAA,CACA,UChCgB,CDmClB,KACE,eAAA,CACA,cAAA,CACA,UCtCgB,CDyClB,QACE,0BAAA,CAAA,0BAAA,CAAA,mBAAA,CACA,uBAAA,CAAA,oBAAA,CAAA,sBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,kBAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CACA,iBAAA,CACA,4BAAA,CAAA,oBAAA,CACA,cAAA,CACA,WAAA,CACA,iBAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,gBAAA,CACA,wBCvDa,CDwDb,UCvDgB,CDwDhB,4DACE,CADF,oDACE,CAGF,cACE,wBC/CwB,CDkD1B,cACE,wBCnEY,CDqEZ,oBACE,wBCpDwB",sourcesContent:["/* Reset and base styles  */\n* {\n  padding: 0px;\n  margin: 0px;\n  border: none;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Links */\n\na,\na:link,\na:visited {\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: none;\n}\n\n/* Common */\n\naside,\nnav,\nfooter,\nheader,\nsection,\nmain {\n  display: block;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nul,\nul li {\n  list-style: none;\n}\n\nimg {\n  vertical-align: top;\n}\n\nimg,\nsvg {\n  max-width: 100%;\n  height: auto;\n}\n\naddress {\n  font-style: normal;\n}\n\n/* Form */\n\ninput,\ntextarea,\nbutton,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  color: inherit;\n  background-color: transparent;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\nbutton,\ninput[type='submit'] {\n  display: inline-block;\n  box-shadow: none;\n  background-color: transparent;\n  background: none;\n  cursor: pointer;\n}\n\ninput:focus,\ninput:active,\nbutton:focus,\nbutton:active {\n  outline: none;\n}\n\nbutton::-moz-focus-inner {\n  padding: 0;\n  border: 0;\n}\n\nlabel {\n  cursor: pointer;\n}\n\nlegend {\n  display: block;\n}\n\ninput[type='file'] {\n  max-width: 100%;\n}\n","@mixin font-face($name, $path, $weight: normal, $style: normal) {\n  @font-face {\n    font-family: $name;\n    src: url('#{$path}.woff2') format('woff2');\n    font-weight: $weight;\n    font-style: $style;\n    font-display: swap;\n  }\n}\n\n@include font-face('Jost', '../assets/fonts/Jost/Jost-Regular', 400);\n@include font-face('Jost', '../assets/fonts/Jost/Jost-Bold', 700);\n@include font-face('Jost', '../assets/fonts/Jost/Jost-SemiBold', 600);\n",".main {\n  flex-grow: 1;\n}\n\n.header {\n  position: sticky;\n  top: 60;\n  background-color: bg-color-secondary;\n  padding: 30 410 20 20;\n}\n\n.header__content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.footer {\n  display: flex;\n  min-height: 100vh;\n  justify-content: space-between;\n  padding: 40 0;\n  background-color: bg-color-secondary;\n  color: text-color-secondary;\n}\n","@use 'variables' as *;\n\n* {\n  font-family: $font-main;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  min-width: 320px;\n  min-height: 100dvh;\n  font-family: $font-main;\n  font-weight: 400;\n  line-height: 1.6;\n  color: $text-color-primary;\n  background-color: $bg-color-primary;\n}\n\nsection {\n  padding: 120px 0;\n}\n\n.container {\n  margin: 0 auto;\n  padding: 0 20px;\n  max-width: 1200px;\n  width: 100%;\n  height: 100%;\n\n  &--wide {\n    max-width: 1760px;\n  }\n}\n\n.logo {\n  font-weight: 700;\n  font-size: 30px;\n  color: $text-color-secondary;\n}\n\n.tel {\n  font-weight: 600;\n  font-size: 30px;\n  color: $text-color-secondary;\n}\n\n.button {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 25px 54px;\n  font-size: 18px;\n  font-weight: 400;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  user-select: none;\n  background-color: $controls-bg-primary;\n  color: $controls-color-primary;\n  transition:\n    background-color 0.3s ease,\n    color 0.3s ease;\n\n  &:hover {\n    background-color: $controls-bg-primary-hover;\n  }\n\n  &--dark {\n    background-color: $controls-bg-secondary;\n\n    &:hover {\n      background-color: $controls-bg-secondary-hover;\n    }\n  }\n}\n","$font-main: 'Jost', sans-serif;\n\n// Цвета\n$primary-color: #141024;\n$accent-color: #d52027;\n$secondary-color: #ffffff;\n\n// Цвета текста\n$text-color-primary: $primary-color;\n$text-color-accent: $accent-color;\n$text-color-secondary: $secondary-color;\n\n// Фоны\n$bg-color-primary: $secondary-color;\n$bg-color-accent: $accent-color;\n$bg-color-secondary: $primary-color;\n\n// Кнопки и элементы управления\n$controls-bg-primary: $accent-color;\n$controls-bg-primary-hover: #b9191d;\n$controls-bg-secondary: $primary-color;\n$controls-bg-secondary-hover: #282148;\n$controls-color-primary: $secondary-color;\n"],sourceRoot:""}]);const C=u},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},417:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},268:(e,n,t)=>{"use strict";var o=t(72),r=t.n(o),i=t(825),a=t.n(i),c=t(659),s=t.n(c),A=t(56),l=t.n(A),d=t(540),u=t.n(d),f=t(113),p=t.n(f),h=t(887),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=u();var m=r()(h.default,C);if(!h.default.locals||e.hot.invalidate){var b=!h.default.locals,g=b?h:h.default.locals;e.hot.accept(887,(n=>{h=t(887),function(e,n,t){if(!e&&n||e&&!n)return!1;var o;for(o in e)if((!t||"default"!==o)&&e[o]!==n[o])return!1;for(o in n)if(!(t&&"default"===o||e[o]))return!1;return!0}(g,b?h:h.default.locals,b)?(g=b?h:h.default.locals,m(h.default)):e.hot.invalidate()}))}e.hot.dispose((function(){m()})),h.default&&h.default.locals&&h.default.locals},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var s=e[c],A=o.base?s[0]+o.base:s[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var u=t(d),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(f);else{var p=r(f,o);o.byIndex=c,n.splice(c,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var s=o(e,r),A=0;A<i.length;A++){var l=t(i[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=s}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},789:(e,n,t)=>{"use strict";t(268),t(144)},144:()=>{const e=document.querySelector(".heading");console.log(e.innerHTML)},632:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Bold.woff2"},787:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-Regular.woff2"},682:(e,n,t)=>{"use strict";e.exports=t.p+"assets/fonts/Jost-SemiBold.woff2"}},o={};function r(e){var n=o[e];if(void 0!==n){if(void 0!==n.error)throw n.error;return n.exports}var i=o[e]={id:e,exports:{}};try{var a={id:e,module:i,factory:t[e],require:r};r.i.forEach((function(e){e(a)})),i=a.module,a.factory.call(i.exports,i,i.exports,a.require)}catch(e){throw i.error=e,e}return i.exports}r.m=t,r.c=o,r.i=[],r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.hu=e=>e+"."+r.h()+".hot-update.js",r.miniCssF=e=>{},r.hmrF=()=>"main."+r.h()+".hot-update.json",r.h=()=>"1be8aa6c8616194e2206",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),e={},n="block-2-html-css:",r.l=(t,o,i,a)=>{if(e[t])e[t].push(o);else{var c,s;if(void 0!==i)for(var A=document.getElementsByTagName("script"),l=0;l<A.length;l++){var d=A[l];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==n+i){c=d;break}}c||(s=!0,(c=document.createElement("script")).charset="utf-8",c.timeout=120,r.nc&&c.setAttribute("nonce",r.nc),c.setAttribute("data-webpack",n+i),c.src=t),e[t]=[o];var u=(n,o)=>{c.onerror=c.onload=null,clearTimeout(f);var r=e[t];if(delete e[t],c.parentNode&&c.parentNode.removeChild(c),r&&r.forEach((e=>e(o))),n)return n(o)},f=setTimeout(u.bind(null,void 0,{type:"timeout",target:c}),12e4);c.onerror=u.bind(null,c.onerror),c.onload=u.bind(null,c.onload),s&&document.head.appendChild(c)}},r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e,n,t,o={},i=r.c,a=[],c=[],s="idle",A=0,l=[];function d(e){s=e;for(var n=[],t=0;t<c.length;t++)n[t]=c[t].call(null,e);return Promise.all(n).then((function(){}))}function u(){0==--A&&d("ready").then((function(){if(0===A){var e=l;l=[];for(var n=0;n<e.length;n++)e[n]()}}))}function f(e){if("idle"!==s)throw new Error("check() is only allowed in idle status");return d("check").then(r.hmrM).then((function(t){return t?d("prepare").then((function(){var o=[];return n=[],Promise.all(Object.keys(r.hmrC).reduce((function(e,i){return r.hmrC[i](t.c,t.r,t.m,e,n,o),e}),[])).then((function(){return n=function(){return e?h(e):d("ready").then((function(){return o}))},0===A?n():new Promise((function(e){l.push((function(){e(n())}))}));var n}))})):d(C()?"ready":"idle").then((function(){return null}))}))}function p(e){return"ready"!==s?Promise.resolve().then((function(){throw new Error("apply() is only allowed in ready status (state: "+s+")")})):h(e)}function h(e){e=e||{},C();var o=n.map((function(n){return n(e)}));n=void 0;var r=o.map((function(e){return e.error})).filter(Boolean);if(r.length>0)return d("abort").then((function(){throw r[0]}));var i=d("dispose");o.forEach((function(e){e.dispose&&e.dispose()}));var a,c=d("apply"),s=function(e){a||(a=e)},A=[];return o.forEach((function(e){if(e.apply){var n=e.apply(s);if(n)for(var t=0;t<n.length;t++)A.push(n[t])}})),Promise.all([i,c]).then((function(){return a?d("fail").then((function(){throw a})):t?h(e).then((function(e){return A.forEach((function(n){e.indexOf(n)<0&&e.push(n)})),e})):d("idle").then((function(){return A}))}))}function C(){if(t)return n||(n=[]),Object.keys(r.hmrI).forEach((function(e){t.forEach((function(t){r.hmrI[e](t,n)}))})),t=void 0,!0}r.hmrD=o,r.i.push((function(l){var h,C,m,b,g=l.module,y=function(n,t){var o=i[t];if(!o)return n;var r=function(r){if(o.hot.active){if(i[r]){var c=i[r].parents;-1===c.indexOf(t)&&c.push(t)}else a=[t],e=r;-1===o.children.indexOf(r)&&o.children.push(r)}else console.warn("[HMR] unexpected require("+r+") from disposed module "+t),a=[];return n(r)},c=function(e){return{configurable:!0,enumerable:!0,get:function(){return n[e]},set:function(t){n[e]=t}}};for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&"e"!==l&&Object.defineProperty(r,l,c(l));return r.e=function(e,t){return function(e){switch(s){case"ready":d("prepare");case"prepare":return A++,e.then(u,u),e;default:return e}}(n.e(e,t))},r}(l.require,l.id);g.hot=(h=l.id,C=g,b={_acceptedDependencies:{},_acceptedErrorHandlers:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:m=e!==h,_requireSelf:function(){a=C.parents.slice(),e=m?void 0:h,r(h)},active:!0,accept:function(e,n,t){if(void 0===e)b._selfAccepted=!0;else if("function"==typeof e)b._selfAccepted=e;else if("object"==typeof e&&null!==e)for(var o=0;o<e.length;o++)b._acceptedDependencies[e[o]]=n||function(){},b._acceptedErrorHandlers[e[o]]=t;else b._acceptedDependencies[e]=n||function(){},b._acceptedErrorHandlers[e]=t},decline:function(e){if(void 0===e)b._selfDeclined=!0;else if("object"==typeof e&&null!==e)for(var n=0;n<e.length;n++)b._declinedDependencies[e[n]]=!0;else b._declinedDependencies[e]=!0},dispose:function(e){b._disposeHandlers.push(e)},addDisposeHandler:function(e){b._disposeHandlers.push(e)},removeDisposeHandler:function(e){var n=b._disposeHandlers.indexOf(e);n>=0&&b._disposeHandlers.splice(n,1)},invalidate:function(){switch(this._selfInvalidated=!0,s){case"idle":n=[],Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](h,n)})),d("ready");break;case"ready":Object.keys(r.hmrI).forEach((function(e){r.hmrI[e](h,n)}));break;case"prepare":case"check":case"dispose":case"apply":(t=t||[]).push(h)}},check:f,apply:p,status:function(e){if(!e)return s;c.push(e)},addStatusHandler:function(e){c.push(e)},removeStatusHandler:function(e){var n=c.indexOf(e);n>=0&&c.splice(n,1)},data:o[h]},e=void 0,b),g.parents=a,g.children=[],a=[],l.require=y})),r.hmrC={},r.hmrI={}})(),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var n=r.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=t[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{if("undefined"!=typeof document){var e=[],n=[],t=t=>({dispose:()=>{for(var n=0;n<e.length;n++){var t=e[n];t.parentNode&&t.parentNode.removeChild(t)}e.length=0},apply:()=>{for(var e=0;e<n.length;e++)n[e].rel="stylesheet";n.length=0}});r.hmrC.miniCss=(o,i,a,c,s,A)=>{s.push(t),o.forEach((t=>{var o=r.miniCssF(t),i=r.p+o,a=((e,n)=>{for(var t=document.getElementsByTagName("link"),o=0;o<t.length;o++){var r=(a=t[o]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(r===e||r===n))return a}var i=document.getElementsByTagName("style");for(o=0;o<i.length;o++){var a;if((r=(a=i[o]).getAttribute("data-href"))===e||r===n)return a}})(o,i);a&&c.push(new Promise(((o,c)=>{var s=((e,n,t,o,i)=>{var a=document.createElement("link");return a.rel="stylesheet",a.type="text/css",r.nc&&(a.nonce=r.nc),a.onerror=a.onload=t=>{if(a.onerror=a.onload=null,"load"===t.type)o();else{var r=t&&t.type,c=t&&t.target&&t.target.href||n,s=new Error("Loading CSS chunk "+e+" failed.\n("+r+": "+c+")");s.name="ChunkLoadError",s.code="CSS_CHUNK_LOAD_FAILED",s.type=r,s.request=c,a.parentNode&&a.parentNode.removeChild(a),i(s)}},a.href=n,t?t.parentNode.insertBefore(a,t.nextSibling):document.head.appendChild(a),a})(t,i,a,(()=>{s.as="style",s.rel="preload",o()}),c);e.push(a),n.push(s)})))}))}}})(),(()=>{r.b=document.baseURI||self.location.href;var e,n,t,o,i,a=r.hmrS_jsonp=r.hmrS_jsonp||{792:0},c={};function s(n,t){return e=t,new Promise(((e,t)=>{c[n]=e;var o=r.p+r.hu(n),i=new Error;r.l(o,(e=>{if(c[n]){c[n]=void 0;var o=e&&("load"===e.type?"missing":e.type),r=e&&e.target&&e.target.src;i.message="Loading hot update chunk "+n+" failed.\n("+o+": "+r+")",i.name="ChunkLoadError",i.type=o,i.request=r,t(i)}}))}))}function A(e){function c(e){for(var n=[e],t={},o=n.map((function(e){return{chain:[e],id:e}}));o.length>0;){var i=o.pop(),a=i.id,c=i.chain,A=r.c[a];if(A&&(!A.hot._selfAccepted||A.hot._selfInvalidated)){if(A.hot._selfDeclined)return{type:"self-declined",chain:c,moduleId:a};if(A.hot._main)return{type:"unaccepted",chain:c,moduleId:a};for(var l=0;l<A.parents.length;l++){var d=A.parents[l],u=r.c[d];if(u){if(u.hot._declinedDependencies[a])return{type:"declined",chain:c.concat([d]),moduleId:a,parentId:d};-1===n.indexOf(d)&&(u.hot._acceptedDependencies[a]?(t[d]||(t[d]=[]),s(t[d],[a])):(delete t[d],n.push(d),o.push({chain:c.concat([d]),id:d})))}}}}return{type:"accepted",moduleId:e,outdatedModules:n,outdatedDependencies:t}}function s(e,n){for(var t=0;t<n.length;t++){var o=n[t];-1===e.indexOf(o)&&e.push(o)}}r.f&&delete r.f.jsonpHmr,n=void 0;var A={},l=[],d={},u=function(e){console.warn("[HMR] unexpected require("+e.id+") to disposed module")};for(var f in t)if(r.o(t,f)){var p=t[f],h=p?c(f):{type:"disposed",moduleId:f},C=!1,m=!1,b=!1,g="";switch(h.chain&&(g="\nUpdate propagation: "+h.chain.join(" -> ")),h.type){case"self-declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(C=new Error("Aborted because of self decline: "+h.moduleId+g));break;case"declined":e.onDeclined&&e.onDeclined(h),e.ignoreDeclined||(C=new Error("Aborted because of declined dependency: "+h.moduleId+" in "+h.parentId+g));break;case"unaccepted":e.onUnaccepted&&e.onUnaccepted(h),e.ignoreUnaccepted||(C=new Error("Aborted because "+f+" is not accepted"+g));break;case"accepted":e.onAccepted&&e.onAccepted(h),m=!0;break;case"disposed":e.onDisposed&&e.onDisposed(h),b=!0;break;default:throw new Error("Unexception type "+h.type)}if(C)return{error:C};if(m)for(f in d[f]=p,s(l,h.outdatedModules),h.outdatedDependencies)r.o(h.outdatedDependencies,f)&&(A[f]||(A[f]=[]),s(A[f],h.outdatedDependencies[f]));b&&(s(l,[h.moduleId]),d[f]=u)}t=void 0;for(var y,v=[],x=0;x<l.length;x++){var w=l[x],B=r.c[w];B&&(B.hot._selfAccepted||B.hot._main)&&d[w]!==u&&!B.hot._selfInvalidated&&v.push({module:w,require:B.hot._requireSelf,errorHandler:B.hot._selfAccepted})}return{dispose:function(){var e;o.forEach((function(e){delete a[e]})),o=void 0;for(var n,t=l.slice();t.length>0;){var i=t.pop(),c=r.c[i];if(c){var s={},d=c.hot._disposeHandlers;for(x=0;x<d.length;x++)d[x].call(null,s);for(r.hmrD[i]=s,c.hot.active=!1,delete r.c[i],delete A[i],x=0;x<c.children.length;x++){var u=r.c[c.children[x]];u&&(e=u.parents.indexOf(i))>=0&&u.parents.splice(e,1)}}}for(var f in A)if(r.o(A,f)&&(c=r.c[f]))for(y=A[f],x=0;x<y.length;x++)n=y[x],(e=c.children.indexOf(n))>=0&&c.children.splice(e,1)},apply:function(n){for(var t in d)r.o(d,t)&&(r.m[t]=d[t]);for(var o=0;o<i.length;o++)i[o](r);for(var a in A)if(r.o(A,a)){var c=r.c[a];if(c){y=A[a];for(var s=[],u=[],f=[],p=0;p<y.length;p++){var h=y[p],C=c.hot._acceptedDependencies[h],m=c.hot._acceptedErrorHandlers[h];if(C){if(-1!==s.indexOf(C))continue;s.push(C),u.push(m),f.push(h)}}for(var b=0;b<s.length;b++)try{s[b].call(null,y)}catch(t){if("function"==typeof u[b])try{u[b](t,{moduleId:a,dependencyId:f[b]})}catch(o){e.onErrored&&e.onErrored({type:"accept-error-handler-errored",moduleId:a,dependencyId:f[b],error:o,originalError:t}),e.ignoreErrored||(n(o),n(t))}else e.onErrored&&e.onErrored({type:"accept-errored",moduleId:a,dependencyId:f[b],error:t}),e.ignoreErrored||n(t)}}}for(var g=0;g<v.length;g++){var x=v[g],w=x.module;try{x.require(w)}catch(t){if("function"==typeof x.errorHandler)try{x.errorHandler(t,{moduleId:w,module:r.c[w]})}catch(o){e.onErrored&&e.onErrored({type:"self-accept-error-handler-errored",moduleId:w,error:o,originalError:t}),e.ignoreErrored||(n(o),n(t))}else e.onErrored&&e.onErrored({type:"self-accept-errored",moduleId:w,error:t}),e.ignoreErrored||n(t)}}return l}}}self.webpackHotUpdateblock_2_html_css=(n,o,a)=>{for(var s in o)r.o(o,s)&&(t[s]=o[s],e&&e.push(s));a&&i.push(a),c[n]&&(c[n](),c[n]=void 0)},r.hmrI.jsonp=function(e,n){t||(t={},i=[],o=[],n.push(A)),r.o(t,e)||(t[e]=r.m[e])},r.hmrC.jsonp=function(e,c,l,d,u,f){u.push(A),n={},o=c,t=l.reduce((function(e,n){return e[n]=!1,e}),{}),i=[],e.forEach((function(e){r.o(a,e)&&void 0!==a[e]?(d.push(s(e,f)),n[e]=!0):n[e]=!1})),r.f&&(r.f.jsonpHmr=function(e,t){n&&r.o(n,e)&&!n[e]&&(t.push(s(e)),n[e]=!0)})},r.hmrM=()=>{if("undefined"==typeof fetch)throw new Error("No browser support: need fetch API");return fetch(r.p+r.hmrF()).then((e=>{if(404!==e.status){if(!e.ok)throw new Error("Failed to fetch update manifest "+e.statusText);return e.json()}}))}})(),r.nc=void 0,r(789)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,